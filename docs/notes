NESDoc.pdf:

Page 11: Memory locations $4000 - $4020 are adresses memory-mapped to
the PPU's hardware registers, i.e. the registers used to control the
program's graphics.

It seems that the interrupt latency is 7 cycles because of all the
setup that needs to be done. Program instructions are not executed in
these 7 cycles, it's just setup work. This shouldn't matter at all when
writing an emulator.

A detailed explanation of the complete instruction set can be found
in [2], [29] and [32]. Probably also on the wiki?

"The PPUâ€™s registers are mostly located in the I/O registers section of
CPU memory at $2000-$2007 and $4014 as described in Appendix B." This is
memory-mapped I/O. Better wording would be: "The PPU's registers are
addressed via..." rather than "located in."

----------

General:

Bank switching - with 16-bit addressing, each adress is 16 bits, which
allows seamless access to 2^16=64kB of memory. To access more than 64kB,
the NES uses bank switching. This is used in the cartridges, but not
in the CPU/PPU/any form of internal memory. The cartridge may contain
multiple "banks" of memory (blocks of memory chips, basically). These were
accessed through a special chip called the memory management controller
(MMU). This chip handled bank switching. This might not even concern the
emulator at all. These chips are also called memory-mappers.

Possibly trivia:

Serial communication - communication done one bit at a time.
Parallel communication - done multiple bits at a time.
There's also serial and parallel ports. It's intuitive why multiple-bit
communication is called "parallel."

